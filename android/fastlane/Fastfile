# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
  #   gradle(task: "clean assembleRelease")
  #   crashlytics
  
  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here
  # end

  # desc "Deploy a new version to the Google Play"
  # lane :deploy do
  #   gradle(task: "clean assembleDevRelease")
  #   upload_to_play_store
  # end

  desc "Increment version based on latest version on the firebase lane"
  lane :increment_version do
    latest_release = firebase_app_distribution_get_latest_release(
      app: ENV['FIREBASE_APP_ID'],
      service_credentials_file: "firebase_credentials.json"
    )
    increment_version_code({ version_code: latest_release[:buildVersion].to_i + 1 })
  end
  

  desc "Building your App in version beta"
  lane :beta do |options|
    puts "+---------------------------------+".bold.blue
    puts "|-- Environment: #{options[:env]} ðŸš€ --|".bold.blue
    puts "+---------------------------------+".bold.blue

    # increment_version_code(
    #   gradle_file_path: "app/build.gradle",
    # )

    increment_version

    # tests must pass
    # sh "yarn test" ## uncomment this line to check test before build android

    gradle(
      task: "clean assembleProdRelease"
    )
    # using ENV file, if not using ENV file we can define directly in here
    firebase_app_distribution(
      service_credentials_file: "firebase_credentials.json",
      app: ENV['FIREBASE_APP_ID'],
      # groups: ENV["GROUPS"] || options[:groups],
      # release_notes: options[:notes] || "",
      release_notes_file: "FirebaseAppDistributionConfig/release_notes.txt",
      groups_file: "FirebaseAppDistributionConfig/groups.txt",
    )
  end
end
